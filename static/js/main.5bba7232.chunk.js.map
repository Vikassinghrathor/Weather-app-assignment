{"version":3,"sources":["images/WeatherIcons.gif","apiKeys.js","forecast.js","currentLocation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","key","base","Forcast","props","useState","query","setQuery","error","setError","weather","setWeather","useEffect","className","icon","color","size","animate","type","placeholder","onChange","e","target","value","src","onClick","city","axios","get","apiKeys","then","response","data","catch","console","log","message","alt","main","name","sys","country","Math","round","temp","humidity","visibility","wind","speed","defaults","Weather","lat","undefined","lon","errorMessage","temperatureC","temperatureF","description","sunrise","sunset","errorMsg","location","setLocation","navigator","geolocation","getPosition","position","getWeather","coords","latitude","longitude","err","alert","timerID","setInterval","clearInterval","options","Promise","resolve","reject","getCurrentPosition","a","fetch","api_call","json","prevState","Fragment","id","format","interval","ticking","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","onTemperatureUpdate","loader","style","width","WebkitUserDrag","fontSize","fontWeight","marginTop","App","href","rel","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5bba7232.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WeatherIcons.0a218296.gif\";","// Visit https://api.openweathermap.org & then signup to get our API keys for free\nmodule.exports = {\n  key: \"16d0e4db3e96c4c3aa07fa40da935b87\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\nfunction Forcast(props) {\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const search = (city) => {\n    axios\n      .get(\n        `${apiKeys.base}weather?q=${\n          city != \"[object Object]\" ? city : query\n        }&units=metric&APPID=${apiKeys.key}`\n      )\n      .then((response) => {\n        setWeather(response.data);\n        setQuery(\"\");\n      })\n      .catch(function (error) {\n        console.log(error);\n        setWeather(\"\");\n        setQuery(\"\");\n        setError({ message: \"Not Found\", query: query });\n      });\n  };\n\n  useEffect(() => {\n    return () => {\n    };\n  }, []);\n\n  return (\n    <div className=\"forecast\">\n      <div className=\"forecast-icon\">\n        <ReactAnimatedWeather\n          icon={props.icon}\n          color=\"white\"\n          size={112}\n          animate={true}\n        />\n      </div>\n      <div className=\"today-weather\">\n        <h3>{props.weather}</h3>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search any city\"\n            onChange={(e) => setQuery(e.target.value)}\n            value={query}\n          />\n          <div className=\"img-box\">\n            <img\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\n              onClick={() => search(query)}\n              alt=\"error\"\n            />\n          </div>\n        </div>\n        <ul>\n          {typeof weather.main !== \"undefined\" ? (\n            <div>\n              <li className=\"cityHead\">\n                <p>\n                  {weather.name}, {weather.sys.country}\n                </p>\n                <img\n                  className=\"temp\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                  alt=\"error\"\n                />\n              </li>\n              <li>\n                Temperature{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.temp)}Â°c ({weather.weather[0].main})\n                </span>\n              </li>\n              <li>\n                Humidity{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.main.humidity)}%\n                </span>\n              </li>\n              <li>\n                Visibility{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.visibility)} mi\n                </span>\n              </li>\n              <li>\n                Wind Speed{\" \"}\n                <span className=\"temp\">\n                  {Math.round(weather.wind.speed)} Km/h\n                </span>\n              </li>\n            </div>\n          ) : (\n            <li>\n              {error.query} {error.message}\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Forcast;\n","import React, { useState, useEffect } from \"react\";\nimport Clock from \"react-live-clock\";\nimport Forcast from \"./forecast\";\nimport loader from \"./images/WeatherIcons.gif\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport apiKeys from \"./apiKeys\";\n\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day}, ${date} ${month} ${year}`;\n};\n\nconst defaults = {\n  color: \"white\",\n  size: 112,\n  animate: true,\n};\n\nfunction Weather() {\n  const [location, setLocation] = useState({\n    lat: undefined,\n    lon: undefined,\n    errorMessage: undefined,\n    temperatureC: undefined,\n    temperatureF: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: \"CLEAR_DAY\",\n    sunrise: undefined,\n    sunset: undefined,\n    errorMsg: undefined,\n  });\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      getPosition()\n        .then((position) => {\n          getWeather(position.coords.latitude, position.coords.longitude);\n        })\n        .catch((err) => {\n          getWeather(28.67, 77.22);\n          alert(\n            \"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real-time weather.\"\n          );\n        });\n    } else {\n      alert(\"Geolocation not available\");\n    }\n\n    const timerID = setInterval(() => {\n      getWeather(location.lat, location.lon);\n    }, 600000);\n\n    return () => clearInterval(timerID);\n  }, [location.lat, location.lon]);\n\n  const getPosition = (options) => {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(resolve, reject, options);\n    });\n  };\n\n  const getWeather = async (lat, lon) => {\n    const api_call = await fetch(\n      `${apiKeys.base}weather?lat=${lat}&lon=${lon}&units=metric&APPID=${apiKeys.key}`\n    );\n    const data = await api_call.json();\n    setLocation((prevState) => ({\n      ...prevState,\n      lat: lat,\n      lon: lon,\n      city: data.name,\n      temperatureC: Math.round(data.main.temp),\n      temperatureF: Math.round(data.main.temp * 1.8 + 32),\n      humidity: data.main.humidity,\n      main: data.weather[0].main,\n      country: data.sys.country,\n    }));\n\n    switch (data.weather[0].main) {\n      case \"Haze\":\n        setLocation((prevState) => ({ ...prevState, icon: \"CLEAR_DAY\" }));\n        break;\n      case \"Clouds\":\n        setLocation((prevState) => ({ ...prevState, icon: \"CLOUDY\" }));\n        break;\n      case \"Rain\":\n        setLocation((prevState) => ({ ...prevState, icon: \"RAIN\" }));\n        break;\n      case \"Snow\":\n        setLocation((prevState) => ({ ...prevState, icon: \"SNOW\" }));\n        break;\n      case \"Dust\":\n        setLocation((prevState) => ({ ...prevState, icon: \"WIND\" }));\n        break;\n      case \"Drizzle\":\n        setLocation((prevState) => ({ ...prevState, icon: \"SLEET\" }));\n        break;\n      case \"Fog\":\n        setLocation((prevState) => ({ ...prevState, icon: \"FOG\" }));\n        break;\n      case \"Smoke\":\n        setLocation((prevState) => ({ ...prevState, icon: \"FOG\" }));\n        break;\n      case \"Tornado\":\n        setLocation((prevState) => ({ ...prevState, icon: \"WIND\" }));\n        break;\n      default:\n        setLocation((prevState) => ({ ...prevState, icon: \"CLEAR_DAY\" }));\n    }\n  };\n\n  if (location.temperatureC) {\n    return (\n      <React.Fragment>\n        <div className=\"city\">\n          <div className=\"title\">\n            <h2>{location.city}</h2>\n            <h3>{location.country}</h3>\n          </div>\n          <div className=\"mb-icon\">\n            {\" \"}\n            <ReactAnimatedWeather\n              icon={location.icon}\n              color={defaults.color}\n              size={defaults.size}\n              animate={defaults.animate}\n            />\n            <p>{location.main}</p>\n          </div>\n          <div className=\"date-time\">\n            <div className=\"dmy\">\n              <div id=\"txt\"></div>\n              <div className=\"current-time\">\n                <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} />\n              </div>\n              <div className=\"current-date\">{dateBuilder(new Date())}</div>\n            </div>\n            <div className=\"temperature\">\n              <p>\n                {location.temperatureC}Â°<span>C</span>\n              </p>\n            </div>\n          </div>\n        </div>\n        <Forcast\n          icon={location.icon}\n          weather={location.main}\n          onTemperatureUpdate={(temp) =>\n            setLocation((prevState) => ({\n              ...prevState,\n              temperatureC: Math.round(temp),\n            }))\n          }\n        />\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <img src={loader} style={{ width: \"50%\", WebkitUserDrag: \"none\" }} alt=\"error\" />\n        <h3 style={{ color: \"white\", fontSize: \"22px\", fontWeight: \"600\" }}>\n          Detecting your location\n        </h3>\n        <h3 style={{ color: \"white\", marginTop: \"10px\" }}>\n          Your current location wil be displayed on the App <br></br> & used\n          for calculating Real-time weather.\n        </h3>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Weather;\n","import React from \"react\";\nimport CurrentLocation from \"./currentLocation\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <CurrentLocation />\n      </div>\n      <div className=\"footer-info\">\n        <a href=\"https://github.com/Vikassinghrathor/Weather-app-assignment\">\n          Download Source Code\n        </a>{\" \"}\n        | Developed by{\" \"}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/vikas-rathore-51ba91194/\">\n          Vikas Singh Rathore\n        </a>{\" \"}\n        | Powered by{\" \"}\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.htmlhints.com/\">\n          HTML HINTS\n        </a>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}